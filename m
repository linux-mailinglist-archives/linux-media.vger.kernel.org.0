Return-Path: <linux-media-owner@vger.kernel.org>
X-Original-To: lists+linux-media@lfdr.de
Delivered-To: lists+linux-media@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id CB1B31EE0C2
	for <lists+linux-media@lfdr.de>; Thu,  4 Jun 2020 11:10:15 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728571AbgFDJIl (ORCPT <rfc822;lists+linux-media@lfdr.de>);
        Thu, 4 Jun 2020 05:08:41 -0400
Received: from mailgw02.mediatek.com ([210.61.82.184]:56761 "EHLO
        mailgw02.mediatek.com" rhost-flags-OK-FAIL-OK-FAIL) by vger.kernel.org
        with ESMTP id S1728545AbgFDJIh (ORCPT
        <rfc822;linux-media@vger.kernel.org>); Thu, 4 Jun 2020 05:08:37 -0400
X-UUID: 2828bb7c8bf8496fbf3f714c1f766ef0-20200604
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=mediatek.com; s=dk;
        h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:In-Reply-To:Message-ID:Date:Subject:CC:To:From; bh=5gwWnIdrjpGmnBIXJWfqyG3VwZRdTWN1rEE3lre6FMs=;
        b=hVGb67UiEk8cN3xw3pN/yfHpzd7JKI4AQ8QcdMZ6oZOZ/G3aFTLtwnpMofA/iYZglLZwTKwlq6qFvi2C3vcCCBtiDb9lgxRHYdfa3JLY4bpSGeev2PbEiXYHasm8VPFWlnTBrq9pTTKp4vpmrbLvMIrKmYIi6M9QL1IVXDHAqUk=;
X-UUID: 2828bb7c8bf8496fbf3f714c1f766ef0-20200604
Received: from mtkcas11.mediatek.inc [(172.21.101.40)] by mailgw02.mediatek.com
        (envelope-from <xia.jiang@mediatek.com>)
        (Cellopoint E-mail Firewall v4.1.10 Build 0809 with TLS)
        with ESMTP id 223873100; Thu, 04 Jun 2020 17:08:27 +0800
Received: from MTKCAS06.mediatek.inc (172.21.101.30) by
 mtkmbs05n1.mediatek.inc (172.21.101.15) with Microsoft SMTP Server (TLS) id
 15.0.1497.2; Thu, 4 Jun 2020 17:08:25 +0800
Received: from localhost.localdomain (10.17.3.153) by MTKCAS06.mediatek.inc
 (172.21.101.73) with Microsoft SMTP Server id 15.0.1497.2 via Frontend
 Transport; Thu, 4 Jun 2020 17:08:22 +0800
From:   Xia Jiang <xia.jiang@mediatek.com>
To:     Hans Verkuil <hverkuil-cisco@xs4all.nl>,
        Mauro Carvalho Chehab <mchehab+samsung@kernel.org>,
        Rob Herring <robh+dt@kernel.org>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Rick Chang <rick.chang@mediatek.com>
CC:     <linux-media@vger.kernel.org>, <devicetree@vger.kernel.org>,
        <linux-kernel@vger.kernel.org>,
        <linux-arm-kernel@lists.infradead.org>,
        <linux-mediatek@lists.infradead.org>,
        Marek Szyprowski <m.szyprowski@samsung.com>,
        Tomasz Figa <tfiga@chromium.org>,
        <srv_heupstream@mediatek.com>, <senozhatsky@chromium.org>,
        <mojahsu@chromium.org>, <drinkcat@chromium.org>,
        <maoguang.meng@mediatek.com>, <sj.huang@mediatek.com>,
        Xia Jiang <xia.jiang@mediatek.com>
Subject: [PATCH RESEND v9 17/18] media: platform: Rename existing functions/defines/variables
Date:   Thu, 4 Jun 2020 17:05:52 +0800
Message-ID: <20200604090553.10861-19-xia.jiang@mediatek.com>
X-Mailer: git-send-email 2.18.0
In-Reply-To: <20200604090553.10861-1-xia.jiang@mediatek.com>
References: <20200604090553.10861-1-xia.jiang@mediatek.com>
MIME-Version: 1.0
Content-Type: text/plain
X-MTK:  N
Content-Transfer-Encoding: base64
Sender: linux-media-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-media.vger.kernel.org>
X-Mailing-List: linux-media@vger.kernel.org

UmVuYW1lIGV4aXN0aW5nIGZ1bmNpdG9ucy9kZWZpbmVzL3ZhcmlhYmxlcyB3aXRoIGEgIF9kZWMg
cHJlZml4IGFuZA0Kd2l0aG91dCBkZWNfIHByZWZpeCB0byBwcmVwYXJlIGZvciB0aGUgYWRkaXRp
b24gb2YgdGhlIGpwZWcgZW5jb2Rlcg0KZmVhdHVyZS4NCg0KU2lnbmVkLW9mZi1ieTogWGlhIEpp
YW5nIDx4aWEuamlhbmdAbWVkaWF0ZWsuY29tPg0KLS0tDQp2OTogbmV3IHBhdGNoDQotLS0NCiAu
Li4vbWVkaWEvcGxhdGZvcm0vbXRrLWpwZWcvbXRrX2pwZWdfY29yZS5jICAgfCAyMDAgKysrKysr
KysrLS0tLS0tLS0tDQogLi4uL21lZGlhL3BsYXRmb3JtL210ay1qcGVnL210a19qcGVnX2NvcmUu
aCAgIHwgICA4ICstDQogLi4uL21lZGlhL3BsYXRmb3JtL210ay1qcGVnL210a19qcGVnX2RlY19o
dy5oIHwgICA3ICstDQogMyBmaWxlcyBjaGFuZ2VkLCAxMDkgaW5zZXJ0aW9ucygrKSwgMTA2IGRl
bGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS9tdGstanBl
Zy9tdGtfanBlZ19jb3JlLmMgYi9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL210ay1qcGVnL210a19q
cGVnX2NvcmUuYw0KaW5kZXggZTBlNTIyYTUwMmUxLi4yOWI4YjgyYzYwNmMgMTAwNjQ0DQotLS0g
YS9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL210ay1qcGVnL210a19qcGVnX2NvcmUuYw0KKysrIGIv
ZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS9tdGstanBlZy9tdGtfanBlZ19jb3JlLmMNCkBAIC0yNyw3
ICsyNyw3IEBADQogI2luY2x1ZGUgIm10a19qcGVnX2NvcmUuaCINCiAjaW5jbHVkZSAibXRrX2pw
ZWdfZGVjX3BhcnNlLmgiDQogDQotc3RhdGljIHN0cnVjdCBtdGtfanBlZ19mbXQgbXRrX2pwZWdf
Zm9ybWF0c1tdID0gew0KK3N0YXRpYyBzdHJ1Y3QgbXRrX2pwZWdfZm10IG10a19qcGVnX2RlY19m
b3JtYXRzW10gPSB7DQogCXsNCiAJCS5mb3VyY2MJCT0gVjRMMl9QSVhfRk1UX0pQRUcsDQogCQku
Y29scGxhbmVzCT0gMSwNCkBAIC01Myw3ICs1Myw3IEBAIHN0YXRpYyBzdHJ1Y3QgbXRrX2pwZWdf
Zm10IG10a19qcGVnX2Zvcm1hdHNbXSA9IHsNCiAJfSwNCiB9Ow0KIA0KLSNkZWZpbmUgTVRLX0pQ
RUdfTlVNX0ZPUk1BVFMgQVJSQVlfU0laRShtdGtfanBlZ19mb3JtYXRzKQ0KKyNkZWZpbmUgTVRL
X0pQRUdfREVDX05VTV9GT1JNQVRTIEFSUkFZX1NJWkUobXRrX2pwZWdfZGVjX2Zvcm1hdHMpDQog
DQogc3RydWN0IG10a19qcGVnX3NyY19idWYgew0KIAlzdHJ1Y3QgdmIyX3Y0bDJfYnVmZmVyIGI7
DQpAQCAtNzUsMTIgKzc1LDEyIEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IG10a19qcGVnX3NyY19i
dWYgKm10a19qcGVnX3ZiMl90b19zcmNidWYoDQogCXJldHVybiBjb250YWluZXJfb2YodG9fdmIy
X3Y0bDJfYnVmZmVyKHZiKSwgc3RydWN0IG10a19qcGVnX3NyY19idWYsIGIpOw0KIH0NCiANCi1z
dGF0aWMgaW50IG10a19qcGVnX3F1ZXJ5Y2FwKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2
LA0KLQkJCSAgICAgc3RydWN0IHY0bDJfY2FwYWJpbGl0eSAqY2FwKQ0KK3N0YXRpYyBpbnQgbXRr
X2pwZWdfZGVjX3F1ZXJ5Y2FwKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0KKwkJCQkg
c3RydWN0IHY0bDJfY2FwYWJpbGl0eSAqY2FwKQ0KIHsNCiAJc3RydWN0IG10a19qcGVnX2RldiAq
anBlZyA9IHZpZGVvX2RydmRhdGEoZmlsZSk7DQogDQotCXN0cnNjcHkoY2FwLT5kcml2ZXIsIE1U
S19KUEVHX05BTUUgIiBkZWNvZGVyIiwgc2l6ZW9mKGNhcC0+ZHJpdmVyKSk7DQorCXN0cnNjcHko
Y2FwLT5kcml2ZXIsIE1US19KUEVHX05BTUUsIHNpemVvZihjYXAtPmRyaXZlcikpOw0KIAlzdHJz
Y3B5KGNhcC0+Y2FyZCwgTVRLX0pQRUdfTkFNRSAiIGRlY29kZXIiLCBzaXplb2YoY2FwLT5jYXJk
KSk7DQogCXNucHJpbnRmKGNhcC0+YnVzX2luZm8sIHNpemVvZihjYXAtPmJ1c19pbmZvKSwgInBs
YXRmb3JtOiVzIiwNCiAJCSBkZXZfbmFtZShqcGVnLT5kZXYpKTsNCkBAIC0xMDksMjIgKzEwOSwy
MyBAQCBzdGF0aWMgaW50IG10a19qcGVnX2VudW1fZm10KHN0cnVjdCBtdGtfanBlZ19mbXQgKm10
a19qcGVnX2Zvcm1hdHMsIGludCBuLA0KIAlyZXR1cm4gMDsNCiB9DQogDQotc3RhdGljIGludCBt
dGtfanBlZ19lbnVtX2ZtdF92aWRfY2FwKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0K
LQkJCQkgICAgIHN0cnVjdCB2NGwyX2ZtdGRlc2MgKmYpDQorc3RhdGljIGludCBtdGtfanBlZ19k
ZWNfZW51bV9mbXRfdmlkX2NhcChzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9pZCAqcHJpdiwNCisJCQkJ
CSBzdHJ1Y3QgdjRsMl9mbXRkZXNjICpmKQ0KIHsNCi0JcmV0dXJuIG10a19qcGVnX2VudW1fZm10
KG10a19qcGVnX2Zvcm1hdHMsIE1US19KUEVHX05VTV9GT1JNQVRTLCBmLA0KKwlyZXR1cm4gbXRr
X2pwZWdfZW51bV9mbXQobXRrX2pwZWdfZGVjX2Zvcm1hdHMsDQorCQkJCSBNVEtfSlBFR19ERUNf
TlVNX0ZPUk1BVFMsIGYsDQogCQkJCSBNVEtfSlBFR19GTVRfRkxBR19ERUNfQ0FQVFVSRSk7DQog
fQ0KIA0KLXN0YXRpYyBpbnQgbXRrX2pwZWdfZW51bV9mbXRfdmlkX291dChzdHJ1Y3QgZmlsZSAq
ZmlsZSwgdm9pZCAqcHJpdiwNCi0JCQkJICAgICBzdHJ1Y3QgdjRsMl9mbXRkZXNjICpmKQ0KK3N0
YXRpYyBpbnQgbXRrX2pwZWdfZGVjX2VudW1fZm10X3ZpZF9vdXQoc3RydWN0IGZpbGUgKmZpbGUs
IHZvaWQgKnByaXYsDQorCQkJCQkgc3RydWN0IHY0bDJfZm10ZGVzYyAqZikNCiB7DQotCXJldHVy
biBtdGtfanBlZ19lbnVtX2ZtdChtdGtfanBlZ19mb3JtYXRzLCBNVEtfSlBFR19OVU1fRk9STUFU
UywgZiwNCi0JCQkJIE1US19KUEVHX0ZNVF9GTEFHX0RFQ19PVVRQVVQpOw0KKwlyZXR1cm4gbXRr
X2pwZWdfZW51bV9mbXQobXRrX2pwZWdfZGVjX2Zvcm1hdHMsIE1US19KUEVHX0RFQ19OVU1fRk9S
TUFUUywNCisJCQkJIGYsIE1US19KUEVHX0ZNVF9GTEFHX0RFQ19PVVRQVVQpOw0KIH0NCiANCi1z
dGF0aWMgc3RydWN0IG10a19qcGVnX3FfZGF0YSAqbXRrX2pwZWdfZ2V0X3FfZGF0YShzdHJ1Y3Qg
bXRrX2pwZWdfY3R4ICpjdHgsDQotCQkJCQkJICAgZW51bSB2NGwyX2J1Zl90eXBlIHR5cGUpDQor
c3RhdGljIHN0cnVjdCBtdGtfanBlZ19xX2RhdGEgKg0KK210a19qcGVnX2dldF9xX2RhdGEoc3Ry
dWN0IG10a19qcGVnX2N0eCAqY3R4LCBlbnVtIHY0bDJfYnVmX3R5cGUgdHlwZSkNCiB7DQogCWlm
IChWNEwyX1RZUEVfSVNfT1VUUFVUKHR5cGUpKQ0KIAkJcmV0dXJuICZjdHgtPm91dF9xOw0KQEAg
LTE0MSw4ICsxNDIsOCBAQCBzdGF0aWMgc3RydWN0IG10a19qcGVnX2ZtdCAqbXRrX2pwZWdfZmlu
ZF9mb3JtYXQoc3RydWN0IG10a19qcGVnX2N0eCAqY3R4LA0KIAkJICAgTVRLX0pQRUdfRk1UX0ZM
QUdfREVDX09VVFBVVCA6DQogCQkgICBNVEtfSlBFR19GTVRfRkxBR19ERUNfQ0FQVFVSRTsNCiAN
Ci0JZm9yIChrID0gMDsgayA8IE1US19KUEVHX05VTV9GT1JNQVRTOyBrKyspIHsNCi0JCXN0cnVj
dCBtdGtfanBlZ19mbXQgKmZtdCA9ICZtdGtfanBlZ19mb3JtYXRzW2tdOw0KKwlmb3IgKGsgPSAw
OyBrIDwgTVRLX0pQRUdfREVDX05VTV9GT1JNQVRTOyBrKyspIHsNCisJCXN0cnVjdCBtdGtfanBl
Z19mbXQgKmZtdCA9ICZtdGtfanBlZ19kZWNfZm9ybWF0c1trXTsNCiANCiAJCWlmIChmbXQtPmZv
dXJjYyA9PSBwaXhlbGZvcm1hdCAmJiBmbXQtPmZsYWdzICYgZm10X2ZsYWcpDQogCQkJcmV0dXJu
IGZtdDsNCkBAIC0yNzAsOCArMjcxLDggQEAgc3RhdGljIGludCBtdGtfanBlZ19nX2ZtdF92aWRf
bXBsYW5lKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0KIAlyZXR1cm4gMDsNCiB9DQog
DQotc3RhdGljIGludCBtdGtfanBlZ190cnlfZm10X3ZpZF9jYXBfbXBsYW5lKHN0cnVjdCBmaWxl
ICpmaWxlLCB2b2lkICpwcml2LA0KLQkJCQkJICAgc3RydWN0IHY0bDJfZm9ybWF0ICpmKQ0KK3N0
YXRpYyBpbnQgbXRrX2pwZWdfZGVjX3RyeV9mbXRfdmlkX2NhcF9tcGxhbmUoc3RydWN0IGZpbGUg
KmZpbGUsIHZvaWQgKnByaXYsDQorCQkJCQkgICAgICAgc3RydWN0IHY0bDJfZm9ybWF0ICpmKQ0K
IHsNCiAJc3RydWN0IG10a19qcGVnX2N0eCAqY3R4ID0gbXRrX2pwZWdfZmhfdG9fY3R4KHByaXYp
Ow0KIAlzdHJ1Y3QgbXRrX2pwZWdfZm10ICpmbXQ7DQpAQCAtMjkxLDggKzI5Miw4IEBAIHN0YXRp
YyBpbnQgbXRrX2pwZWdfdHJ5X2ZtdF92aWRfY2FwX21wbGFuZShzdHJ1Y3QgZmlsZSAqZmlsZSwg
dm9pZCAqcHJpdiwNCiAJcmV0dXJuIG10a19qcGVnX3RyeV9mbXRfbXBsYW5lKGYsIGZtdCwgY3R4
LCBNVEtfSlBFR19GTVRfVFlQRV9DQVBUVVJFKTsNCiB9DQogDQotc3RhdGljIGludCBtdGtfanBl
Z190cnlfZm10X3ZpZF9vdXRfbXBsYW5lKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0K
LQkJCQkJICAgc3RydWN0IHY0bDJfZm9ybWF0ICpmKQ0KK3N0YXRpYyBpbnQgbXRrX2pwZWdfZGVj
X3RyeV9mbXRfdmlkX291dF9tcGxhbmUoc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQor
CQkJCQkgICAgICAgc3RydWN0IHY0bDJfZm9ybWF0ICpmKQ0KIHsNCiAJc3RydWN0IG10a19qcGVn
X2N0eCAqY3R4ID0gbXRrX2pwZWdfZmhfdG9fY3R4KHByaXYpOw0KIAlzdHJ1Y3QgbXRrX2pwZWdf
Zm10ICpmbXQ7DQpAQCAtMzY0LDI0ICszNjUsMjQgQEAgc3RhdGljIGludCBtdGtfanBlZ19zX2Zt
dF9tcGxhbmUoc3RydWN0IG10a19qcGVnX2N0eCAqY3R4LA0KIAlyZXR1cm4gMDsNCiB9DQogDQot
c3RhdGljIGludCBtdGtfanBlZ19zX2ZtdF92aWRfb3V0X21wbGFuZShzdHJ1Y3QgZmlsZSAqZmls
ZSwgdm9pZCAqcHJpdiwNCi0JCQkJCSBzdHJ1Y3QgdjRsMl9mb3JtYXQgKmYpDQorc3RhdGljIGlu
dCBtdGtfanBlZ19kZWNfc19mbXRfdmlkX291dF9tcGxhbmUoc3RydWN0IGZpbGUgKmZpbGUsIHZv
aWQgKnByaXYsDQorCQkJCQkgICAgIHN0cnVjdCB2NGwyX2Zvcm1hdCAqZikNCiB7DQogCWludCBy
ZXQ7DQogDQotCXJldCA9IG10a19qcGVnX3RyeV9mbXRfdmlkX291dF9tcGxhbmUoZmlsZSwgcHJp
diwgZik7DQorCXJldCA9IG10a19qcGVnX2RlY190cnlfZm10X3ZpZF9vdXRfbXBsYW5lKGZpbGUs
IHByaXYsIGYpOw0KIAlpZiAocmV0KQ0KIAkJcmV0dXJuIHJldDsNCiANCiAJcmV0dXJuIG10a19q
cGVnX3NfZm10X21wbGFuZShtdGtfanBlZ19maF90b19jdHgocHJpdiksIGYpOw0KIH0NCiANCi1z
dGF0aWMgaW50IG10a19qcGVnX3NfZm10X3ZpZF9jYXBfbXBsYW5lKHN0cnVjdCBmaWxlICpmaWxl
LCB2b2lkICpwcml2LA0KLQkJCQkJIHN0cnVjdCB2NGwyX2Zvcm1hdCAqZikNCitzdGF0aWMgaW50
IG10a19qcGVnX2RlY19zX2ZtdF92aWRfY2FwX21wbGFuZShzdHJ1Y3QgZmlsZSAqZmlsZSwgdm9p
ZCAqcHJpdiwNCisJCQkJCSAgICAgc3RydWN0IHY0bDJfZm9ybWF0ICpmKQ0KIHsNCiAJaW50IHJl
dDsNCiANCi0JcmV0ID0gbXRrX2pwZWdfdHJ5X2ZtdF92aWRfY2FwX21wbGFuZShmaWxlLCBwcml2
LCBmKTsNCisJcmV0ID0gbXRrX2pwZWdfZGVjX3RyeV9mbXRfdmlkX2NhcF9tcGxhbmUoZmlsZSwg
cHJpdiwgZik7DQogCWlmIChyZXQpDQogCQlyZXR1cm4gcmV0Ow0KIA0KQEAgLTQxMCw4ICs0MTEs
OCBAQCBzdGF0aWMgaW50IG10a19qcGVnX3N1YnNjcmliZV9ldmVudChzdHJ1Y3QgdjRsMl9maCAq
ZmgsDQogCXJldHVybiB2NGwyX2N0cmxfc3Vic2NyaWJlX2V2ZW50KGZoLCBzdWIpOw0KIH0NCiAN
Ci1zdGF0aWMgaW50IG10a19qcGVnX2dfc2VsZWN0aW9uKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lk
ICpwcml2LA0KLQkJCQlzdHJ1Y3QgdjRsMl9zZWxlY3Rpb24gKnMpDQorc3RhdGljIGludCBtdGtf
anBlZ19kZWNfZ19zZWxlY3Rpb24oc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKnByaXYsDQorCQkJ
CSAgICBzdHJ1Y3QgdjRsMl9zZWxlY3Rpb24gKnMpDQogew0KIAlzdHJ1Y3QgbXRrX2pwZWdfY3R4
ICpjdHggPSBtdGtfanBlZ19maF90b19jdHgocHJpdik7DQogDQpAQCAtNDM5LDggKzQ0MCw4IEBA
IHN0YXRpYyBpbnQgbXRrX2pwZWdfZ19zZWxlY3Rpb24oc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQg
KnByaXYsDQogCXJldHVybiAwOw0KIH0NCiANCi1zdGF0aWMgaW50IG10a19qcGVnX3Nfc2VsZWN0
aW9uKHN0cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LA0KLQkJCQlzdHJ1Y3QgdjRsMl9zZWxl
Y3Rpb24gKnMpDQorc3RhdGljIGludCBtdGtfanBlZ19kZWNfc19zZWxlY3Rpb24oc3RydWN0IGZp
bGUgKmZpbGUsIHZvaWQgKnByaXYsDQorCQkJCSAgICBzdHJ1Y3QgdjRsMl9zZWxlY3Rpb24gKnMp
DQogew0KIAlzdHJ1Y3QgbXRrX2pwZWdfY3R4ICpjdHggPSBtdGtfanBlZ19maF90b19jdHgocHJp
dik7DQogDQpAQCAtNDgzLDIwICs0ODQsMjAgQEAgc3RhdGljIGludCBtdGtfanBlZ19xYnVmKHN0
cnVjdCBmaWxlICpmaWxlLCB2b2lkICpwcml2LCBzdHJ1Y3QgdjRsMl9idWZmZXIgKmJ1ZikNCiAJ
cmV0dXJuIHY0bDJfbTJtX3FidWYoZmlsZSwgZmgtPm0ybV9jdHgsIGJ1Zik7DQogfQ0KIA0KLXN0
YXRpYyBjb25zdCBzdHJ1Y3QgdjRsMl9pb2N0bF9vcHMgbXRrX2pwZWdfaW9jdGxfb3BzID0gew0K
LQkudmlkaW9jX3F1ZXJ5Y2FwICAgICAgICAgICAgICAgID0gbXRrX2pwZWdfcXVlcnljYXAsDQot
CS52aWRpb2NfZW51bV9mbXRfdmlkX2NhcAk9IG10a19qcGVnX2VudW1fZm10X3ZpZF9jYXAsDQot
CS52aWRpb2NfZW51bV9mbXRfdmlkX291dAk9IG10a19qcGVnX2VudW1fZm10X3ZpZF9vdXQsDQot
CS52aWRpb2NfdHJ5X2ZtdF92aWRfY2FwX21wbGFuZQk9IG10a19qcGVnX3RyeV9mbXRfdmlkX2Nh
cF9tcGxhbmUsDQotCS52aWRpb2NfdHJ5X2ZtdF92aWRfb3V0X21wbGFuZQk9IG10a19qcGVnX3Ry
eV9mbXRfdmlkX291dF9tcGxhbmUsDQorc3RhdGljIGNvbnN0IHN0cnVjdCB2NGwyX2lvY3RsX29w
cyBtdGtfanBlZ19kZWNfaW9jdGxfb3BzID0gew0KKwkudmlkaW9jX3F1ZXJ5Y2FwICAgICAgICAg
ICAgICAgID0gbXRrX2pwZWdfZGVjX3F1ZXJ5Y2FwLA0KKwkudmlkaW9jX2VudW1fZm10X3ZpZF9j
YXAJPSBtdGtfanBlZ19kZWNfZW51bV9mbXRfdmlkX2NhcCwNCisJLnZpZGlvY19lbnVtX2ZtdF92
aWRfb3V0CT0gbXRrX2pwZWdfZGVjX2VudW1fZm10X3ZpZF9vdXQsDQorCS52aWRpb2NfdHJ5X2Zt
dF92aWRfY2FwX21wbGFuZQk9IG10a19qcGVnX2RlY190cnlfZm10X3ZpZF9jYXBfbXBsYW5lLA0K
KwkudmlkaW9jX3RyeV9mbXRfdmlkX291dF9tcGxhbmUJPSBtdGtfanBlZ19kZWNfdHJ5X2ZtdF92
aWRfb3V0X21wbGFuZSwNCiAJLnZpZGlvY19nX2ZtdF92aWRfY2FwX21wbGFuZSAgICA9IG10a19q
cGVnX2dfZm10X3ZpZF9tcGxhbmUsDQogCS52aWRpb2NfZ19mbXRfdmlkX291dF9tcGxhbmUgICAg
PSBtdGtfanBlZ19nX2ZtdF92aWRfbXBsYW5lLA0KLQkudmlkaW9jX3NfZm10X3ZpZF9jYXBfbXBs
YW5lICAgID0gbXRrX2pwZWdfc19mbXRfdmlkX2NhcF9tcGxhbmUsDQotCS52aWRpb2Nfc19mbXRf
dmlkX291dF9tcGxhbmUgICAgPSBtdGtfanBlZ19zX2ZtdF92aWRfb3V0X21wbGFuZSwNCisJLnZp
ZGlvY19zX2ZtdF92aWRfY2FwX21wbGFuZSAgICA9IG10a19qcGVnX2RlY19zX2ZtdF92aWRfY2Fw
X21wbGFuZSwNCisJLnZpZGlvY19zX2ZtdF92aWRfb3V0X21wbGFuZSAgICA9IG10a19qcGVnX2Rl
Y19zX2ZtdF92aWRfb3V0X21wbGFuZSwNCiAJLnZpZGlvY19xYnVmICAgICAgICAgICAgICAgICAg
ICA9IG10a19qcGVnX3FidWYsDQogCS52aWRpb2Nfc3Vic2NyaWJlX2V2ZW50ICAgICAgICAgPSBt
dGtfanBlZ19zdWJzY3JpYmVfZXZlbnQsDQotCS52aWRpb2NfZ19zZWxlY3Rpb24JCT0gbXRrX2pw
ZWdfZ19zZWxlY3Rpb24sDQotCS52aWRpb2Nfc19zZWxlY3Rpb24JCT0gbXRrX2pwZWdfc19zZWxl
Y3Rpb24sDQorCS52aWRpb2NfZ19zZWxlY3Rpb24JCT0gbXRrX2pwZWdfZGVjX2dfc2VsZWN0aW9u
LA0KKwkudmlkaW9jX3Nfc2VsZWN0aW9uCQk9IG10a19qcGVnX2RlY19zX3NlbGVjdGlvbiwNCiAN
CiAJLnZpZGlvY19jcmVhdGVfYnVmcwkJPSB2NGwyX20ybV9pb2N0bF9jcmVhdGVfYnVmcywNCiAJ
LnZpZGlvY19wcmVwYXJlX2J1ZgkJPSB2NGwyX20ybV9pb2N0bF9wcmVwYXJlX2J1ZiwNCkBAIC02
MTUsNyArNjE2LDcgQEAgc3RhdGljIHZvaWQgbXRrX2pwZWdfc2V0X3F1ZXVlX2RhdGEoc3RydWN0
IG10a19qcGVnX2N0eCAqY3R4LA0KIAkJIHBhcmFtLT5kZWNfdywgcGFyYW0tPmRlY19oKTsNCiB9
DQogDQotc3RhdGljIHZvaWQgbXRrX2pwZWdfYnVmX3F1ZXVlKHN0cnVjdCB2YjJfYnVmZmVyICp2
YikNCitzdGF0aWMgdm9pZCBtdGtfanBlZ19kZWNfYnVmX3F1ZXVlKHN0cnVjdCB2YjJfYnVmZmVy
ICp2YikNCiB7DQogCXN0cnVjdCBtdGtfanBlZ19jdHggKmN0eCA9IHZiMl9nZXRfZHJ2X3ByaXYo
dmItPnZiMl9xdWV1ZSk7DQogCXN0cnVjdCBtdGtfanBlZ19kZWNfcGFyYW0gKnBhcmFtOw0KQEAg
LTY2Myw3ICs2NjQsNyBAQCBzdGF0aWMgc3RydWN0IHZiMl92NGwyX2J1ZmZlciAqbXRrX2pwZWdf
YnVmX3JlbW92ZShzdHJ1Y3QgbXRrX2pwZWdfY3R4ICpjdHgsDQogCQlyZXR1cm4gdjRsMl9tMm1f
ZHN0X2J1Zl9yZW1vdmUoY3R4LT5maC5tMm1fY3R4KTsNCiB9DQogDQotc3RhdGljIHZvaWQgbXRr
X2pwZWdfc3RvcF9zdHJlYW1pbmcoc3RydWN0IHZiMl9xdWV1ZSAqcSkNCitzdGF0aWMgdm9pZCBt
dGtfanBlZ19kZWNfc3RvcF9zdHJlYW1pbmcoc3RydWN0IHZiMl9xdWV1ZSAqcSkNCiB7DQogCXN0
cnVjdCBtdGtfanBlZ19jdHggKmN0eCA9IHZiMl9nZXRfZHJ2X3ByaXYocSk7DQogCXN0cnVjdCB2
YjJfdjRsMl9idWZmZXIgKnZiOw0KQEAgLTY4OSwxMyArNjkwLDEzIEBAIHN0YXRpYyB2b2lkIG10
a19qcGVnX3N0b3Bfc3RyZWFtaW5nKHN0cnVjdCB2YjJfcXVldWUgKnEpDQogCQl2NGwyX20ybV9i
dWZfZG9uZSh2YiwgVkIyX0JVRl9TVEFURV9FUlJPUik7DQogfQ0KIA0KLXN0YXRpYyBjb25zdCBz
dHJ1Y3QgdmIyX29wcyBtdGtfanBlZ19xb3BzID0gew0KK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmIy
X29wcyBtdGtfanBlZ19kZWNfcW9wcyA9IHsNCiAJLnF1ZXVlX3NldHVwICAgICAgICA9IG10a19q
cGVnX3F1ZXVlX3NldHVwLA0KIAkuYnVmX3ByZXBhcmUgICAgICAgID0gbXRrX2pwZWdfYnVmX3By
ZXBhcmUsDQotCS5idWZfcXVldWUgICAgICAgICAgPSBtdGtfanBlZ19idWZfcXVldWUsDQorCS5i
dWZfcXVldWUgICAgICAgICAgPSBtdGtfanBlZ19kZWNfYnVmX3F1ZXVlLA0KIAkud2FpdF9wcmVw
YXJlICAgICAgID0gdmIyX29wc193YWl0X3ByZXBhcmUsDQogCS53YWl0X2ZpbmlzaCAgICAgICAg
PSB2YjJfb3BzX3dhaXRfZmluaXNoLA0KLQkuc3RvcF9zdHJlYW1pbmcgICAgID0gbXRrX2pwZWdf
c3RvcF9zdHJlYW1pbmcsDQorCS5zdG9wX3N0cmVhbWluZyAgICAgPSBtdGtfanBlZ19kZWNfc3Rv
cF9zdHJlYW1pbmcsDQogfTsNCiANCiBzdGF0aWMgdm9pZCBtdGtfanBlZ19zZXRfZGVjX3NyYyhz
dHJ1Y3QgbXRrX2pwZWdfY3R4ICpjdHgsDQpAQCAtNzM1LDcgKzczNiw3IEBAIHN0YXRpYyBpbnQg
bXRrX2pwZWdfc2V0X2RlY19kc3Qoc3RydWN0IG10a19qcGVnX2N0eCAqY3R4LA0KIAlyZXR1cm4g
MDsNCiB9DQogDQotc3RhdGljIHZvaWQgbXRrX2pwZWdfZGV2aWNlX3J1bih2b2lkICpwcml2KQ0K
K3N0YXRpYyB2b2lkIG10a19qcGVnX2RlY19kZXZpY2VfcnVuKHZvaWQgKnByaXYpDQogew0KIAlz
dHJ1Y3QgbXRrX2pwZWdfY3R4ICpjdHggPSBwcml2Ow0KIAlzdHJ1Y3QgbXRrX2pwZWdfZGV2ICpq
cGVnID0gY3R4LT5qcGVnOw0KQEAgLTc2MywxNSArNzY0LDE2IEBAIHN0YXRpYyB2b2lkIG10a19q
cGVnX2RldmljZV9ydW4odm9pZCAqcHJpdikNCiAJCWdvdG8gZGVjX2VuZDsNCiANCiAJbXRrX2pw
ZWdfc2V0X2RlY19zcmMoY3R4LCAmc3JjX2J1Zi0+dmIyX2J1ZiwgJmJzKTsNCi0JaWYgKG10a19q
cGVnX3NldF9kZWNfZHN0KGN0eCwgJmpwZWdfc3JjX2J1Zi0+ZGVjX3BhcmFtLCAmZHN0X2J1Zi0+
dmIyX2J1ZiwgJmZiKSkNCisJaWYgKG10a19qcGVnX3NldF9kZWNfZHN0KGN0eCwgJmpwZWdfc3Jj
X2J1Zi0+ZGVjX3BhcmFtLA0KKwkJCQkgJmRzdF9idWYtPnZiMl9idWYsICZmYikpDQogCQlnb3Rv
IGRlY19lbmQ7DQogDQogCXNwaW5fbG9ja19pcnFzYXZlKCZqcGVnLT5od19sb2NrLCBmbGFncyk7
DQotCW10a19qcGVnX2RlY19yZXNldChqcGVnLT5kZWNfcmVnX2Jhc2UpOw0KLQltdGtfanBlZ19k
ZWNfc2V0X2NvbmZpZyhqcGVnLT5kZWNfcmVnX2Jhc2UsDQorCW10a19qcGVnX2RlY19yZXNldChq
cGVnLT5yZWdfYmFzZSk7DQorCW10a19qcGVnX2RlY19zZXRfY29uZmlnKGpwZWctPnJlZ19iYXNl
LA0KIAkJCQkmanBlZ19zcmNfYnVmLT5kZWNfcGFyYW0sICZicywgJmZiKTsNCiANCi0JbXRrX2pw
ZWdfZGVjX3N0YXJ0KGpwZWctPmRlY19yZWdfYmFzZSk7DQorCW10a19qcGVnX2RlY19zdGFydChq
cGVnLT5yZWdfYmFzZSk7DQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmpwZWctPmh3X2xvY2ss
IGZsYWdzKTsNCiAJcmV0dXJuOw0KIA0KQEAgLTc4MywyMCArNzg1LDIwIEBAIHN0YXRpYyB2b2lk
IG10a19qcGVnX2RldmljZV9ydW4odm9pZCAqcHJpdikNCiAJdjRsMl9tMm1fam9iX2ZpbmlzaChq
cGVnLT5tMm1fZGV2LCBjdHgtPmZoLm0ybV9jdHgpOw0KIH0NCiANCi1zdGF0aWMgaW50IG10a19q
cGVnX2pvYl9yZWFkeSh2b2lkICpwcml2KQ0KK3N0YXRpYyBpbnQgbXRrX2pwZWdfZGVjX2pvYl9y
ZWFkeSh2b2lkICpwcml2KQ0KIHsNCiAJc3RydWN0IG10a19qcGVnX2N0eCAqY3R4ID0gcHJpdjsN
CiANCiAJcmV0dXJuIChjdHgtPnN0YXRlID09IE1US19KUEVHX1JVTk5JTkcpID8gMSA6IDA7DQog
fQ0KIA0KLXN0YXRpYyBjb25zdCBzdHJ1Y3QgdjRsMl9tMm1fb3BzIG10a19qcGVnX20ybV9vcHMg
PSB7DQotCS5kZXZpY2VfcnVuID0gbXRrX2pwZWdfZGV2aWNlX3J1biwNCi0JLmpvYl9yZWFkeSAg
PSBtdGtfanBlZ19qb2JfcmVhZHksDQorc3RhdGljIGNvbnN0IHN0cnVjdCB2NGwyX20ybV9vcHMg
bXRrX2pwZWdfZGVjX20ybV9vcHMgPSB7DQorCS5kZXZpY2VfcnVuID0gbXRrX2pwZWdfZGVjX2Rl
dmljZV9ydW4sDQorCS5qb2JfcmVhZHkgID0gbXRrX2pwZWdfZGVjX2pvYl9yZWFkeSwNCiB9Ow0K
IA0KLXN0YXRpYyBpbnQgbXRrX2pwZWdfcXVldWVfaW5pdCh2b2lkICpwcml2LCBzdHJ1Y3QgdmIy
X3F1ZXVlICpzcmNfdnEsDQotCQkJICAgICAgIHN0cnVjdCB2YjJfcXVldWUgKmRzdF92cSkNCitz
dGF0aWMgaW50IG10a19qcGVnX2RlY19xdWV1ZV9pbml0KHZvaWQgKnByaXYsIHN0cnVjdCB2YjJf
cXVldWUgKnNyY192cSwNCisJCQkJICAgc3RydWN0IHZiMl9xdWV1ZSAqZHN0X3ZxKQ0KIHsNCiAJ
c3RydWN0IG10a19qcGVnX2N0eCAqY3R4ID0gcHJpdjsNCiAJaW50IHJldDsNCkBAIC04MDUsNyAr
ODA3LDcgQEAgc3RhdGljIGludCBtdGtfanBlZ19xdWV1ZV9pbml0KHZvaWQgKnByaXYsIHN0cnVj
dCB2YjJfcXVldWUgKnNyY192cSwNCiAJc3JjX3ZxLT5pb19tb2RlcyA9IFZCMl9ETUFCVUYgfCBW
QjJfTU1BUDsNCiAJc3JjX3ZxLT5kcnZfcHJpdiA9IGN0eDsNCiAJc3JjX3ZxLT5idWZfc3RydWN0
X3NpemUgPSBzaXplb2Yoc3RydWN0IG10a19qcGVnX3NyY19idWYpOw0KLQlzcmNfdnEtPm9wcyA9
ICZtdGtfanBlZ19xb3BzOw0KKwlzcmNfdnEtPm9wcyA9ICZtdGtfanBlZ19kZWNfcW9wczsNCiAJ
c3JjX3ZxLT5tZW1fb3BzID0gJnZiMl9kbWFfY29udGlnX21lbW9wczsNCiAJc3JjX3ZxLT50aW1l
c3RhbXBfZmxhZ3MgPSBWNEwyX0JVRl9GTEFHX1RJTUVTVEFNUF9DT1BZOw0KIAlzcmNfdnEtPmxv
Y2sgPSAmY3R4LT5qcGVnLT5sb2NrOw0KQEAgLTgxOCw3ICs4MjAsNyBAQCBzdGF0aWMgaW50IG10
a19qcGVnX3F1ZXVlX2luaXQodm9pZCAqcHJpdiwgc3RydWN0IHZiMl9xdWV1ZSAqc3JjX3ZxLA0K
IAlkc3RfdnEtPmlvX21vZGVzID0gVkIyX0RNQUJVRiB8IFZCMl9NTUFQOw0KIAlkc3RfdnEtPmRy
dl9wcml2ID0gY3R4Ow0KIAlkc3RfdnEtPmJ1Zl9zdHJ1Y3Rfc2l6ZSA9IHNpemVvZihzdHJ1Y3Qg
djRsMl9tMm1fYnVmZmVyKTsNCi0JZHN0X3ZxLT5vcHMgPSAmbXRrX2pwZWdfcW9wczsNCisJZHN0
X3ZxLT5vcHMgPSAmbXRrX2pwZWdfZGVjX3FvcHM7DQogCWRzdF92cS0+bWVtX29wcyA9ICZ2YjJf
ZG1hX2NvbnRpZ19tZW1vcHM7DQogCWRzdF92cS0+dGltZXN0YW1wX2ZsYWdzID0gVjRMMl9CVUZf
RkxBR19USU1FU1RBTVBfQ09QWTsNCiAJZHN0X3ZxLT5sb2NrID0gJmN0eC0+anBlZy0+bG9jazsN
CkBAIC04NTcsNyArODU5LDcgQEAgc3RhdGljIGlycXJldHVybl90IG10a19qcGVnX2RlY19pcnEo
aW50IGlycSwgdm9pZCAqcHJpdikNCiAJdTMyIGRlY19yZXQ7DQogCWludCBpOw0KIA0KLQlkZWNf
cmV0ID0gbXRrX2pwZWdfZGVjX2dldF9pbnRfc3RhdHVzKGpwZWctPmRlY19yZWdfYmFzZSk7DQor
CWRlY19yZXQgPSBtdGtfanBlZ19kZWNfZ2V0X2ludF9zdGF0dXMoanBlZy0+cmVnX2Jhc2UpOw0K
IAlkZWNfaXJxX3JldCA9IG10a19qcGVnX2RlY19lbnVtX3Jlc3VsdChkZWNfcmV0KTsNCiAJY3R4
ID0gdjRsMl9tMm1fZ2V0X2N1cnJfcHJpdihqcGVnLT5tMm1fZGV2KTsNCiAJaWYgKCFjdHgpIHsN
CkBAIC04NzAsNyArODcyLDcgQEAgc3RhdGljIGlycXJldHVybl90IG10a19qcGVnX2RlY19pcnEo
aW50IGlycSwgdm9pZCAqcHJpdikNCiAJanBlZ19zcmNfYnVmID0gbXRrX2pwZWdfdmIyX3RvX3Ny
Y2J1Zigmc3JjX2J1Zi0+dmIyX2J1Zik7DQogDQogCWlmIChkZWNfaXJxX3JldCA+PSBNVEtfSlBF
R19ERUNfUkVTVUxUX1VOREVSRkxPVykNCi0JCW10a19qcGVnX2RlY19yZXNldChqcGVnLT5kZWNf
cmVnX2Jhc2UpOw0KKwkJbXRrX2pwZWdfZGVjX3Jlc2V0KGpwZWctPnJlZ19iYXNlKTsNCiANCiAJ
aWYgKGRlY19pcnFfcmV0ICE9IE1US19KUEVHX0RFQ19SRVNVTFRfRU9GX0RPTkUpIHsNCiAJCWRl
dl9lcnIoanBlZy0+ZGV2LCAiZGVjb2RlIGZhaWxlZFxuIik7DQpAQCAtODkxLDcgKzg5Myw3IEBA
IHN0YXRpYyBpcnFyZXR1cm5fdCBtdGtfanBlZ19kZWNfaXJxKGludCBpcnEsIHZvaWQgKnByaXYp
DQogCXJldHVybiBJUlFfSEFORExFRDsNCiB9DQogDQotc3RhdGljIHZvaWQgbXRrX2pwZWdfc2V0
X2RlZmF1bHRfcGFyYW1zKHN0cnVjdCBtdGtfanBlZ19jdHggKmN0eCkNCitzdGF0aWMgdm9pZCBt
dGtfanBlZ19zZXRfZGVjX2RlZmF1bHRfcGFyYW1zKHN0cnVjdCBtdGtfanBlZ19jdHggKmN0eCkN
CiB7DQogCXN0cnVjdCBtdGtfanBlZ19xX2RhdGEgKnEgPSAmY3R4LT5vdXRfcTsNCiAJaW50IGk7
DQpAQCAtOTIzLDcgKzkyNSw3IEBAIHN0YXRpYyB2b2lkIG10a19qcGVnX3NldF9kZWZhdWx0X3Bh
cmFtcyhzdHJ1Y3QgbXRrX2pwZWdfY3R4ICpjdHgpDQogCX0NCiB9DQogDQotc3RhdGljIGludCBt
dGtfanBlZ19vcGVuKHN0cnVjdCBmaWxlICpmaWxlKQ0KK3N0YXRpYyBpbnQgbXRrX2pwZWdfZGVj
X29wZW4oc3RydWN0IGZpbGUgKmZpbGUpDQogew0KIAlzdHJ1Y3QgbXRrX2pwZWdfZGV2ICpqcGVn
ID0gdmlkZW9fZHJ2ZGF0YShmaWxlKTsNCiAJc3RydWN0IHZpZGVvX2RldmljZSAqdmZkID0gdmlk
ZW9fZGV2ZGF0YShmaWxlKTsNCkBAIC05NDUsMTMgKzk0NywxMyBAQCBzdGF0aWMgaW50IG10a19q
cGVnX29wZW4oc3RydWN0IGZpbGUgKmZpbGUpDQogDQogCWN0eC0+anBlZyA9IGpwZWc7DQogCWN0
eC0+ZmgubTJtX2N0eCA9IHY0bDJfbTJtX2N0eF9pbml0KGpwZWctPm0ybV9kZXYsIGN0eCwNCi0J
CQkJCSAgICBtdGtfanBlZ19xdWV1ZV9pbml0KTsNCisJCQkJCSAgICBtdGtfanBlZ19kZWNfcXVl
dWVfaW5pdCk7DQogCWlmIChJU19FUlIoY3R4LT5maC5tMm1fY3R4KSkgew0KIAkJcmV0ID0gUFRS
X0VSUihjdHgtPmZoLm0ybV9jdHgpOw0KIAkJZ290byBlcnJvcjsNCiAJfQ0KIA0KLQltdGtfanBl
Z19zZXRfZGVmYXVsdF9wYXJhbXMoY3R4KTsNCisJbXRrX2pwZWdfc2V0X2RlY19kZWZhdWx0X3Bh
cmFtcyhjdHgpOw0KIAltdXRleF91bmxvY2soJmpwZWctPmxvY2spOw0KIAlyZXR1cm4gMDsNCiAN
CkBAIC05NzgsOSArOTgwLDkgQEAgc3RhdGljIGludCBtdGtfanBlZ19yZWxlYXNlKHN0cnVjdCBm
aWxlICpmaWxlKQ0KIAlyZXR1cm4gMDsNCiB9DQogDQotc3RhdGljIGNvbnN0IHN0cnVjdCB2NGwy
X2ZpbGVfb3BlcmF0aW9ucyBtdGtfanBlZ19mb3BzID0gew0KK3N0YXRpYyBjb25zdCBzdHJ1Y3Qg
djRsMl9maWxlX29wZXJhdGlvbnMgbXRrX2pwZWdfZGVjX2ZvcHMgPSB7DQogCS5vd25lciAgICAg
ICAgICA9IFRISVNfTU9EVUxFLA0KLQkub3BlbiAgICAgICAgICAgPSBtdGtfanBlZ19vcGVuLA0K
Kwkub3BlbiAgICAgICAgICAgPSBtdGtfanBlZ19kZWNfb3BlbiwNCiAJLnJlbGVhc2UgICAgICAg
ID0gbXRrX2pwZWdfcmVsZWFzZSwNCiAJLnBvbGwgICAgICAgICAgID0gdjRsMl9tMm1fZm9wX3Bv
bGwsDQogCS51bmxvY2tlZF9pb2N0bCA9IHZpZGVvX2lvY3RsMiwNCkBAIC0xMDE2LDcgKzEwMTgs
NyBAQCBzdGF0aWMgaW50IG10a19qcGVnX3Byb2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBk
ZXYpDQogew0KIAlzdHJ1Y3QgbXRrX2pwZWdfZGV2ICpqcGVnOw0KIAlzdHJ1Y3QgcmVzb3VyY2Ug
KnJlczsNCi0JaW50IGRlY19pcnE7DQorCWludCBqcGVnX2lycTsNCiAJaW50IHJldDsNCiANCiAJ
anBlZyA9IGRldm1fa3phbGxvYygmcGRldi0+ZGV2LCBzaXplb2YoKmpwZWcpLCBHRlBfS0VSTkVM
KTsNCkBAIC0xMDI4LDIzICsxMDMwLDIzIEBAIHN0YXRpYyBpbnQgbXRrX2pwZWdfcHJvYmUoc3Ry
dWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikNCiAJanBlZy0+ZGV2ID0gJnBkZXYtPmRldjsNCiAN
CiAJcmVzID0gcGxhdGZvcm1fZ2V0X3Jlc291cmNlKHBkZXYsIElPUkVTT1VSQ0VfTUVNLCAwKTsN
Ci0JanBlZy0+ZGVjX3JlZ19iYXNlID0gZGV2bV9pb3JlbWFwX3Jlc291cmNlKCZwZGV2LT5kZXYs
IHJlcyk7DQotCWlmIChJU19FUlIoanBlZy0+ZGVjX3JlZ19iYXNlKSkgew0KLQkJcmV0ID0gUFRS
X0VSUihqcGVnLT5kZWNfcmVnX2Jhc2UpOw0KKwlqcGVnLT5yZWdfYmFzZSA9IGRldm1faW9yZW1h
cF9yZXNvdXJjZSgmcGRldi0+ZGV2LCByZXMpOw0KKwlpZiAoSVNfRVJSKGpwZWctPnJlZ19iYXNl
KSkgew0KKwkJcmV0ID0gUFRSX0VSUihqcGVnLT5yZWdfYmFzZSk7DQogCQlyZXR1cm4gcmV0Ow0K
IAl9DQogDQotCWRlY19pcnEgPSBwbGF0Zm9ybV9nZXRfaXJxKHBkZXYsIDApOw0KLQlpZiAoZGVj
X2lycSA8IDApIHsNCi0JCWRldl9lcnIoJnBkZXYtPmRldiwgIkZhaWxlZCB0byBnZXQgZGVjX2ly
cSAlZC5cbiIsIGRlY19pcnEpOw0KLQkJcmV0dXJuIGRlY19pcnE7DQorCWpwZWdfaXJxID0gcGxh
dGZvcm1fZ2V0X2lycShwZGV2LCAwKTsNCisJaWYgKGpwZWdfaXJxIDwgMCkgew0KKwkJZGV2X2Vy
cigmcGRldi0+ZGV2LCAiRmFpbGVkIHRvIGdldCBqcGVnX2lycSAlZC5cbiIsIGpwZWdfaXJxKTsN
CisJCXJldHVybiBqcGVnX2lycTsNCiAJfQ0KIA0KLQlyZXQgPSBkZXZtX3JlcXVlc3RfaXJxKCZw
ZGV2LT5kZXYsIGRlY19pcnEsIG10a19qcGVnX2RlY19pcnEsIDAsDQorCXJldCA9IGRldm1fcmVx
dWVzdF9pcnEoJnBkZXYtPmRldiwganBlZ19pcnEsIG10a19qcGVnX2RlY19pcnEsIDAsDQogCQkJ
ICAgICAgIHBkZXYtPm5hbWUsIGpwZWcpOw0KIAlpZiAocmV0KSB7DQotCQlkZXZfZXJyKCZwZGV2
LT5kZXYsICJGYWlsZWQgdG8gcmVxdWVzdCBkZWNfaXJxICVkICglZClcbiIsDQotCQkJZGVjX2ly
cSwgcmV0KTsNCisJCWRldl9lcnIoJnBkZXYtPmRldiwgIkZhaWxlZCB0byByZXF1ZXN0IGpwZWdf
aXJxICVkICglZClcbiIsDQorCQkJanBlZ19pcnEsIHJldCk7DQogCQlnb3RvIGVycl9yZXFfaXJx
Ow0KIAl9DQogDQpAQCAtMTA2MSw0MCArMTA2Myw0MCBAQCBzdGF0aWMgaW50IG10a19qcGVnX3By
b2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpDQogCQlnb3RvIGVycl9kZXZfcmVnaXN0
ZXI7DQogCX0NCiANCi0JanBlZy0+bTJtX2RldiA9IHY0bDJfbTJtX2luaXQoJm10a19qcGVnX20y
bV9vcHMpOw0KKwlqcGVnLT5tMm1fZGV2ID0gdjRsMl9tMm1faW5pdCgmbXRrX2pwZWdfZGVjX20y
bV9vcHMpOw0KIAlpZiAoSVNfRVJSKGpwZWctPm0ybV9kZXYpKSB7DQogCQl2NGwyX2VycigmanBl
Zy0+djRsMl9kZXYsICJGYWlsZWQgdG8gaW5pdCBtZW0ybWVtIGRldmljZVxuIik7DQogCQlyZXQg
PSBQVFJfRVJSKGpwZWctPm0ybV9kZXYpOw0KIAkJZ290byBlcnJfbTJtX2luaXQ7DQogCX0NCiAN
Ci0JanBlZy0+ZGVjX3ZkZXYgPSB2aWRlb19kZXZpY2VfYWxsb2MoKTsNCi0JaWYgKCFqcGVnLT5k
ZWNfdmRldikgew0KKwlqcGVnLT52ZGV2ID0gdmlkZW9fZGV2aWNlX2FsbG9jKCk7DQorCWlmICgh
anBlZy0+dmRldikgew0KIAkJcmV0ID0gLUVOT01FTTsNCi0JCWdvdG8gZXJyX2RlY192ZGV2X2Fs
bG9jOw0KKwkJZ290byBlcnJfdmZkX2pwZWdfYWxsb2M7DQogCX0NCi0Jc25wcmludGYoanBlZy0+
ZGVjX3ZkZXYtPm5hbWUsIHNpemVvZihqcGVnLT5kZWNfdmRldi0+bmFtZSksDQorCXNucHJpbnRm
KGpwZWctPnZkZXYtPm5hbWUsIHNpemVvZihqcGVnLT52ZGV2LT5uYW1lKSwNCiAJCSAiJXMtZGVj
IiwgTVRLX0pQRUdfTkFNRSk7DQotCWpwZWctPmRlY192ZGV2LT5mb3BzID0gJm10a19qcGVnX2Zv
cHM7DQotCWpwZWctPmRlY192ZGV2LT5pb2N0bF9vcHMgPSAmbXRrX2pwZWdfaW9jdGxfb3BzOw0K
LQlqcGVnLT5kZWNfdmRldi0+bWlub3IgPSAtMTsNCi0JanBlZy0+ZGVjX3ZkZXYtPnJlbGVhc2Ug
PSB2aWRlb19kZXZpY2VfcmVsZWFzZTsNCi0JanBlZy0+ZGVjX3ZkZXYtPmxvY2sgPSAmanBlZy0+
bG9jazsNCi0JanBlZy0+ZGVjX3ZkZXYtPnY0bDJfZGV2ID0gJmpwZWctPnY0bDJfZGV2Ow0KLQlq
cGVnLT5kZWNfdmRldi0+dmZsX2RpciA9IFZGTF9ESVJfTTJNOw0KLQlqcGVnLT5kZWNfdmRldi0+
ZGV2aWNlX2NhcHMgPSBWNEwyX0NBUF9TVFJFQU1JTkcgfA0KKwlqcGVnLT52ZGV2LT5mb3BzID0g
Jm10a19qcGVnX2RlY19mb3BzOw0KKwlqcGVnLT52ZGV2LT5pb2N0bF9vcHMgPSAmbXRrX2pwZWdf
ZGVjX2lvY3RsX29wczsNCisJanBlZy0+dmRldi0+bWlub3IgPSAtMTsNCisJanBlZy0+dmRldi0+
cmVsZWFzZSA9IHZpZGVvX2RldmljZV9yZWxlYXNlOw0KKwlqcGVnLT52ZGV2LT5sb2NrID0gJmpw
ZWctPmxvY2s7DQorCWpwZWctPnZkZXYtPnY0bDJfZGV2ID0gJmpwZWctPnY0bDJfZGV2Ow0KKwlq
cGVnLT52ZGV2LT52ZmxfZGlyID0gVkZMX0RJUl9NMk07DQorCWpwZWctPnZkZXYtPmRldmljZV9j
YXBzID0gVjRMMl9DQVBfU1RSRUFNSU5HIHwNCiAJCQkJICAgICAgVjRMMl9DQVBfVklERU9fTTJN
X01QTEFORTsNCiANCi0JcmV0ID0gdmlkZW9fcmVnaXN0ZXJfZGV2aWNlKGpwZWctPmRlY192ZGV2
LCBWRkxfVFlQRV9WSURFTywgLTEpOw0KKwlyZXQgPSB2aWRlb19yZWdpc3Rlcl9kZXZpY2UoanBl
Zy0+dmRldiwgVkZMX1RZUEVfVklERU8sIC0xKTsNCiAJaWYgKHJldCkgew0KIAkJdjRsMl9lcnIo
JmpwZWctPnY0bDJfZGV2LCAiRmFpbGVkIHRvIHJlZ2lzdGVyIHZpZGVvIGRldmljZVxuIik7DQot
CQlnb3RvIGVycl9kZWNfdmRldl9yZWdpc3RlcjsNCisJCWdvdG8gZXJyX3ZmZF9qcGVnX3JlZ2lz
dGVyOw0KIAl9DQogDQotCXZpZGVvX3NldF9kcnZkYXRhKGpwZWctPmRlY192ZGV2LCBqcGVnKTsN
CisJdmlkZW9fc2V0X2RydmRhdGEoanBlZy0+dmRldiwganBlZyk7DQogCXY0bDJfaW5mbygmanBl
Zy0+djRsMl9kZXYsDQogCQkgICJkZWNvZGVyIGRldmljZSByZWdpc3RlcmVkIGFzIC9kZXYvdmlk
ZW8lZCAoJWQsJWQpXG4iLA0KLQkJICBqcGVnLT5kZWNfdmRldi0+bnVtLCBWSURFT19NQUpPUiwg
anBlZy0+ZGVjX3ZkZXYtPm1pbm9yKTsNCisJCSAganBlZy0+dmRldi0+bnVtLCBWSURFT19NQUpP
UiwganBlZy0+dmRldi0+bWlub3IpOw0KIA0KIAlwbGF0Zm9ybV9zZXRfZHJ2ZGF0YShwZGV2LCBq
cGVnKTsNCiANCkBAIC0xMTAyLDEwICsxMTA0LDEwIEBAIHN0YXRpYyBpbnQgbXRrX2pwZWdfcHJv
YmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikNCiANCiAJcmV0dXJuIDA7DQogDQotZXJy
X2RlY192ZGV2X3JlZ2lzdGVyOg0KLQl2aWRlb19kZXZpY2VfcmVsZWFzZShqcGVnLT5kZWNfdmRl
dik7DQorZXJyX3ZmZF9qcGVnX3JlZ2lzdGVyOg0KKwl2aWRlb19kZXZpY2VfcmVsZWFzZShqcGVn
LT52ZGV2KTsNCiANCi1lcnJfZGVjX3ZkZXZfYWxsb2M6DQorZXJyX3ZmZF9qcGVnX2FsbG9jOg0K
IAl2NGwyX20ybV9yZWxlYXNlKGpwZWctPm0ybV9kZXYpOw0KIA0KIGVycl9tMm1faW5pdDoNCkBA
IC0xMTI1LDggKzExMjcsOCBAQCBzdGF0aWMgaW50IG10a19qcGVnX3JlbW92ZShzdHJ1Y3QgcGxh
dGZvcm1fZGV2aWNlICpwZGV2KQ0KIAlzdHJ1Y3QgbXRrX2pwZWdfZGV2ICpqcGVnID0gcGxhdGZv
cm1fZ2V0X2RydmRhdGEocGRldik7DQogDQogCXBtX3J1bnRpbWVfZGlzYWJsZSgmcGRldi0+ZGV2
KTsNCi0JdmlkZW9fdW5yZWdpc3Rlcl9kZXZpY2UoanBlZy0+ZGVjX3ZkZXYpOw0KLQl2aWRlb19k
ZXZpY2VfcmVsZWFzZShqcGVnLT5kZWNfdmRldik7DQorCXZpZGVvX3VucmVnaXN0ZXJfZGV2aWNl
KGpwZWctPnZkZXYpOw0KKwl2aWRlb19kZXZpY2VfcmVsZWFzZShqcGVnLT52ZGV2KTsNCiAJdjRs
Ml9tMm1fcmVsZWFzZShqcGVnLT5tMm1fZGV2KTsNCiAJdjRsMl9kZXZpY2VfdW5yZWdpc3Rlcigm
anBlZy0+djRsMl9kZXYpOw0KIA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvbWVkaWEvcGxhdGZvcm0v
bXRrLWpwZWcvbXRrX2pwZWdfY29yZS5oIGIvZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS9tdGstanBl
Zy9tdGtfanBlZ19jb3JlLmgNCmluZGV4IDVmY2RmNjk1MDc4Mi4uMGI1OWU0ODQ5NWQ1IDEwMDY0
NA0KLS0tIGEvZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS9tdGstanBlZy9tdGtfanBlZ19jb3JlLmgN
CisrKyBiL2RyaXZlcnMvbWVkaWEvcGxhdGZvcm0vbXRrLWpwZWcvbXRrX2pwZWdfY29yZS5oDQpA
QCAtNTEsOCArNTEsOCBAQCBlbnVtIG10a19qcGVnX2N0eF9zdGF0ZSB7DQogICogQHY0bDJfZGV2
OgkJdjRsMiBkZXZpY2UgZm9yIG1lbTJtZW0gbW9kZQ0KICAqIEBtMm1fZGV2OgkJdjRsMiBtZW0y
bWVtIGRldmljZSBkYXRhDQogICogQGFsbG9jX2N0eDoJCXZpZGVvYnVmMiBtZW1vcnkgYWxsb2Nh
dG9yJ3MgY29udGV4dA0KLSAqIEBkZWNfdmRldjoJCXZpZGVvIGRldmljZSBub2RlIGZvciBkZWNv
ZGVyIG1lbTJtZW0gbW9kZQ0KLSAqIEBkZWNfcmVnX2Jhc2U6CUpQRUcgcmVnaXN0ZXJzIG1hcHBp
bmcNCisgKiBAdmRldjoJCXZpZGVvIGRldmljZSBub2RlIGZvciBqcGVnIG1lbTJtZW0gbW9kZQ0K
KyAqIEByZWdfYmFzZToJCUpQRUcgcmVnaXN0ZXJzIG1hcHBpbmcNCiAgKiBAY2xrX2pkZWM6CQlK
UEVHIGh3IHdvcmtpbmcgY2xvY2sNCiAgKiBAY2xrX2pkZWNfc21pOglKUEVHIFNNSSBidXMgY2xv
Y2sNCiAgKiBAbGFyYjoJCVNNSSBkZXZpY2UNCkBAIC02NSw4ICs2NSw4IEBAIHN0cnVjdCBtdGtf
anBlZ19kZXYgew0KIAlzdHJ1Y3QgdjRsMl9kZXZpY2UJdjRsMl9kZXY7DQogCXN0cnVjdCB2NGwy
X20ybV9kZXYJKm0ybV9kZXY7DQogCXZvaWQJCQkqYWxsb2NfY3R4Ow0KLQlzdHJ1Y3QgdmlkZW9f
ZGV2aWNlCSpkZWNfdmRldjsNCi0Jdm9pZCBfX2lvbWVtCQkqZGVjX3JlZ19iYXNlOw0KKwlzdHJ1
Y3QgdmlkZW9fZGV2aWNlCSp2ZGV2Ow0KKwl2b2lkIF9faW9tZW0JCSpyZWdfYmFzZTsNCiAJc3Ry
dWN0IGNsawkJKmNsa19qZGVjOw0KIAlzdHJ1Y3QgY2xrCQkqY2xrX2pkZWNfc21pOw0KIAlzdHJ1
Y3QgZGV2aWNlCQkqbGFyYjsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL210
ay1qcGVnL210a19qcGVnX2RlY19ody5oIGIvZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS9tdGstanBl
Zy9tdGtfanBlZ19kZWNfaHcuaA0KaW5kZXggMWNjMzdkYmZjOGU3Li5jZTI2M2RiNWYzMGEgMTAw
NjQ0DQotLS0gYS9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL210ay1qcGVnL210a19qcGVnX2RlY19o
dy5oDQorKysgYi9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL210ay1qcGVnL210a19qcGVnX2RlY19o
dy5oDQpAQCAtMywxMCArMywxMSBAQA0KICAqIENvcHlyaWdodCAoYykgMjAxNiBNZWRpYVRlayBJ
bmMuDQogICogQXV0aG9yOiBNaW5nIEhzaXUgVHNhaSA8bWluZ2hzaXUudHNhaUBtZWRpYXRlay5j
b20+DQogICogICAgICAgICBSaWNrIENoYW5nIDxyaWNrLmNoYW5nQG1lZGlhdGVrLmNvbT4NCisg
KiAgICAgICAgIFhpYSBKaWFuZyA8eGlhLmppYW5nQG1lZGlhdGVrLmNvbT4NCiAgKi8NCiANCi0j
aWZuZGVmIF9NVEtfSlBFR19IV19IDQotI2RlZmluZSBfTVRLX0pQRUdfSFdfSA0KKyNpZm5kZWYg
X01US19KUEVHX0RFQ19IV19IDQorI2RlZmluZSBfTVRLX0pQRUdfREVDX0hXX0gNCiANCiAjaW5j
bHVkZSA8bWVkaWEvdmlkZW9idWYyLWNvcmUuaD4NCiANCkBAIC03NSw0ICs3Niw0IEBAIHZvaWQg
bXRrX2pwZWdfZGVjX3NldF9jb25maWcodm9pZCBfX2lvbWVtICpiYXNlLA0KIHZvaWQgbXRrX2pw
ZWdfZGVjX3Jlc2V0KHZvaWQgX19pb21lbSAqZGVjX3JlZ19iYXNlKTsNCiB2b2lkIG10a19qcGVn
X2RlY19zdGFydCh2b2lkIF9faW9tZW0gKmRlY19yZWdfYmFzZSk7DQogDQotI2VuZGlmIC8qIF9N
VEtfSlBFR19IV19IICovDQorI2VuZGlmIC8qIF9NVEtfSlBFR19ERUNfSFdfSCAqLw0KLS0gDQoy
LjE4LjANCg==

