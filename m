Return-Path: <linux-media-owner@vger.kernel.org>
X-Original-To: lists+linux-media@lfdr.de
Delivered-To: lists+linux-media@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 5AB191F1579
	for <lists+linux-media@lfdr.de>; Mon,  8 Jun 2020 11:33:42 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729191AbgFHJdg (ORCPT <rfc822;lists+linux-media@lfdr.de>);
        Mon, 8 Jun 2020 05:33:36 -0400
Received: from lb2-smtp-cloud9.xs4all.net ([194.109.24.26]:38987 "EHLO
        lb2-smtp-cloud9.xs4all.net" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1729156AbgFHJdf (ORCPT
        <rfc822;linux-media@vger.kernel.org>);
        Mon, 8 Jun 2020 05:33:35 -0400
Received: from cust-b5b5937f ([IPv6:fc0c:c16d:66b8:757f:c639:739b:9d66:799d])
        by smtp-cloud9.xs4all.net with ESMTPA
        id iE9hjPpCYCKzeiE9ljlLi6; Mon, 08 Jun 2020 11:33:33 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=xs4all.nl; s=s1;
        t=1591608813; bh=cLw7g/W1n9Lz4PzgWG++xt7db/QIniJKRYrvzv+LmpI=;
        h=Subject:To:From:Message-ID:Date:MIME-Version:Content-Type:From:
         Subject;
        b=XuiJE5tm7nJ65OCmEUYzzgv+oXWB1vTSt6ra9oMJCGoe5QaMdeF4/BXEHoMX1JwjE
         DRrOYwqj//H5WEVET4D3WXCTFM3Il3TiTbURrs16T9GSMdcKCoKsQ1G8VutUG4aDNn
         jsmVrfFkKEPdplEd7UVJdajPcpxTlpS9gbHMGfZVzK6ERC80RzfYRg2rNQiOpPiNGF
         zvliVrVSW2f/MEKe5f2aobH2/Vu+sYgdLJ5xyCNXoCU4970V5tYOgLkI4x+xePDU1h
         yezBA8w1O2KDyc22aYrcaInd04CTbENqj1A+s4Gpehr9DyZ1TPSAEpkNO6kvNDjCgV
         Qs6W23YVGEwgQ==
Subject: Re: [RFC PATCH] vimc: Add colors' order over test image
To:     Dafna Hirschfeld <dafna.hirschfeld@collabora.com>,
        Kaaira Gupta <kgupta@es.iitr.ac.in>,
        linux-media@vger.kernel.org,
        Helen Koike <helen.koike@collabora.com>,
        Shuah Khan <skhan@linuxfoundation.org>,
        Mauro Carvalho Chehab <mchehab@kernel.org>,
        linux-kernel@vger.kernel.org, kieran.bingham@ideasonboard.com,
        laurent.pinchart@ideasonboard.com
References: <20200607135325.GA16838@kaaira-HP-Pavilion-Notebook>
 <5866f6c9-36c7-ffe3-41b3-94f184cd9e5d@collabora.com>
From:   Hans Verkuil <hverkuil@xs4all.nl>
Message-ID: <38db03a4-6b22-c341-103c-ed0d4dcce856@xs4all.nl>
Date:   Mon, 8 Jun 2020 11:33:21 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.5.0
MIME-Version: 1.0
In-Reply-To: <5866f6c9-36c7-ffe3-41b3-94f184cd9e5d@collabora.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-CMAE-Envelope: MS4wfFQ4iOic1wuAuKIkxtn75SWuT3pbstCQqhMnUJoY3nZSvaW4G/CIbIoeRFVYDFObkICjf1fqNLtzjYOz0UW3D9YP7ySYKza4BiUAFV994nen+SpIE/zo
 Yr12wvNrVMMu6ZGZ0NPfp9F8rj42k8PGdgl8tbqV8lnoiYSTgS3yZWLUFAw3+UcSXv+BuIFh6kiOGt75qBmwf5Iz7q357UZUO5mC00/UXO6Q71983AOreoxV
 6blWO2aFtkvu//EgmC4yLdLZNAASk9EojAC4O+znlx6Gk14NW+9rIBO2nB1RiUgQPJusPuals7cZDm0tILCGta/L5Xc4VG3UlI28FJxavInXdyndasD5mHTT
 GInmdMgo39bW0tniMtAEFl0HuNVbXUPJeVRLrp8FZ1PDDUeFqW3IqH+NUNQ4/89+el2EIcsK5VbmXC3reIDP3NhBR6YROHi+fQnGc/XRCuy+XnJeyukYQgKS
 pkS/jj/2rsHSmowS8HjWHUZetgr19Jr5FMNeHQ==
Sender: linux-media-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-media.vger.kernel.org>
X-Mailing-List: linux-media@vger.kernel.org

On 08/06/2020 09:10, Dafna Hirschfeld wrote:
> Hi,
> 
> On 07.06.20 15:53, Kaaira Gupta wrote:
>> Currently there is no method to know if the test image generated by vimc
>> is correct (except for comparing it with a known 'correct' image). Add
>> text over the test image, representing the correct order of colors.
>>
>> I have sent it as an RFC because we can add the text as an optional
>> control, and maybe we can print some other useful information as well
>> (like vivid does).
> 
> Yes, it seems like a good idea to add it as a control of the sensor.
> 
>>
>> Signed-off-by: Kaaira Gupta <kgupta@es.iitr.ac.in>
>> --->   drivers/media/test-drivers/vimc/Kconfig       | 2 ++
>>   drivers/media/test-drivers/vimc/vimc-core.c   | 9 +++++++++
>>   drivers/media/test-drivers/vimc/vimc-sensor.c | 8 ++++++++
>>   3 files changed, 19 insertions(+)
>>
>> diff --git a/drivers/media/test-drivers/vimc/Kconfig b/drivers/media/test-drivers/vimc/Kconfig
>> index 4068a67585f9..da4b2ad6e40c 100644
>> --- a/drivers/media/test-drivers/vimc/Kconfig
>> +++ b/drivers/media/test-drivers/vimc/Kconfig
>> @@ -2,6 +2,8 @@
>>   config VIDEO_VIMC
>>   	tristate "Virtual Media Controller Driver (VIMC)"
>>   	depends on VIDEO_DEV && VIDEO_V4L2
>> +	select FONT_SUPPORT
>> +	select FONT_8x16
>>   	select MEDIA_CONTROLLER
>>   	select VIDEO_V4L2_SUBDEV_API
>>   	select VIDEOBUF2_VMALLOC
>> diff --git a/drivers/media/test-drivers/vimc/vimc-core.c b/drivers/media/test-drivers/vimc/vimc-core.c
>> index 11210aaa2551..8142bfbcbd49 100644
>> --- a/drivers/media/test-drivers/vimc/vimc-core.c
>> +++ b/drivers/media/test-drivers/vimc/vimc-core.c
>> @@ -5,10 +5,12 @@
>>    * Copyright (C) 2015-2017 Helen Koike <helen.fornazier@gmail.com>
>>    */
>>   
>> +#include <linux/font.h>
>>   #include <linux/init.h>
>>   #include <linux/module.h>
>>   #include <linux/platform_device.h>
>>   #include <media/media-device.h>
>> +#include <media/tpg/v4l2-tpg.h>
>>   #include <media/v4l2-device.h>
>>   
>>   #include "vimc-common.h"
>> @@ -265,7 +267,14 @@ static int vimc_probe(struct platform_device *pdev)
>>   {
>>   	struct vimc_device *vimc;
>>   	int ret;
>> +	const struct font_desc *font = find_font("VGA8x16");
>>   
>> +	if (font == NULL) {
>> +		pr_err("vimc: could not find font\n");
>> +		return -ENODEV;
>> +	}
>> +
>> +	tpg_set_font(font->data);
> 
> I think the code that set the format should move to the
> code that registers the sensor in vimc-sensor.c
> 
>>   	dev_dbg(&pdev->dev, "probe");
>>   
>>   	vimc = kzalloc(sizeof(*vimc), GFP_KERNEL);
>> diff --git a/drivers/media/test-drivers/vimc/vimc-sensor.c b/drivers/media/test-drivers/vimc/vimc-sensor.c
>> index a2f09ac9a360..4b13955c502a 100644
>> --- a/drivers/media/test-drivers/vimc/vimc-sensor.c
>> +++ b/drivers/media/test-drivers/vimc/vimc-sensor.c
>> @@ -185,10 +185,18 @@ static const struct v4l2_subdev_pad_ops vimc_sen_pad_ops = {
>>   static void *vimc_sen_process_frame(struct vimc_ent_device *ved,
>>   				    const void *sink_frame)
>>   {
>> +	u8 *basep[TPG_MAX_PLANES][2];
>> +	char str[100];
>>   	struct vimc_sen_device *vsen = container_of(ved, struct vimc_sen_device,
>>   						    ved);
>>   
>> +	tpg_calc_text_basep(&vsen->tpg, basep, 0, vsen->frame);
>>   	tpg_fill_plane_buffer(&vsen->tpg, 0, 0, vsen->frame);
>> +
>> +	snprintf(str, sizeof(str),
>> +		 "Order: white, yellow, cyan, green, magenta, red, blue, black");
> The colors are generated by the tpg, so I think it should be a feature of the tpg to print the colors.

I agree. The tpg knows where each color is and based on the width and height it can
print the text. A tpg_gen_pattern_text() function that does the work would be very
nice.

It also doesn't make sense for all patterns, so this is really a nice feature to
incorporate into the TPG itself and enable it via a vivid and vimc control.

Regards,

	Hans

> 
> For example, a function in v4l2-tpg-core.c that get the pattern as an argument and return
> this string, or maybe returns a const pointer to the array of colors, or something like that.
> Then maybe we can add a control in vivid for the same tpg feature.
> 
> Note also that the sensor has a control to change the pattern: vimc_sen_ctrl_test_pattern
> So the string depends on that pattern.
> 
> Thanks,
> Dafna
> 
> 
>> +	tpg_gen_text(&vsen->tpg, basep, 1, 1, str);
>> +
>>   	return vsen->frame;
>>   }
>>   
>>

